package com.suixin.tm4t.L1HelloJava.抽象;

/**
 * @Description:抽象类概述
 * @data:2019/6/4
 * @Auther:acheng
 */
public abstract class 抽象概述 {

    /**
     * 首先是抽象方法:它只有声明，而没有具体的实现。
     */

    abstract void fun();//当定义了抽象方法类必须添加抽象关键字abstract

    /**
     *
     *  如果一个类含有抽象方法，则称这个类为抽象类，抽象类必须在类前用abstract关键字修饰。
     *  因为抽象类中含有无具体实现的方法，所以不能用抽象类创建对象,即不可以直接new.
     *
     *
     * 抽象类特点
     * 1：抽象方法只能定义在抽象类中，抽象类和抽象方法必须由abstract关键字修饰（可以描述类和方法，不可以描述变量）。
     *
     * 2：抽象方法只定义方法声明，并不定义方法实现。
     *
     * 3：抽象类不可以被创建对象(实例化)。
     *
     * 4：只有通过子类继承抽象类并覆盖了抽象类中的所有抽象方法后，该子类才可以实例化。否则，该子类还是一个抽象类。
     *
     * 5: 抽象类只能单继承。
     */
    /**
     * 抽象类的细节：
     * 1：抽象类中是否有构造函数？有，用于给子类对象进行初始化。
     *
     * 2：抽象类中是否可以定义非抽象方法？
     *
     * 可以。其实，抽象类和一般类没有太大的区别，都是在描述事物，只不过抽象类在描述事物时，有些功能不具体。所以抽象类和一般类在定义上，都是需要定义属性和行为的。只不过，比一般类多了一个抽象函数。而且比一般类少了一个创建对象的部分。
     *
     * 3：抽象关键字abstract和哪些不可以共存？final , private , static
     *
     * 4：抽象类中可不可以不定义抽象方法？可以。>>抽象方法目的仅仅为了不让该类创建对象。<<
     */
}
